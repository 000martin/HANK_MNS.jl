var documenterSearchIndex = {"docs":
[{"location":"#Replication-of-McKay,-Nakamura,-and-Steinsson-(2017)","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"Replication of McKay, Nakamura, and Steinsson (2017)","text":"","category":"section"},{"location":"","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"Replication of McKay, Nakamura, and Steinsson (2017)","text":"This is a replication of \"The Power of Forward Guidance\" by Alisdair McKay, Emi Nakamura, and Jón Steinsson.","category":"page"},{"location":"","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"Replication of McKay, Nakamura, and Steinsson (2017)","text":"The project was part of our evaluation for the course Numerical Methods at SciencesPo Paris in Spring 2021. ","category":"page"},{"location":"","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"Replication of McKay, Nakamura, and Steinsson (2017)","text":"In this replication study, we do ...","category":"page"},{"location":"","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"Replication of McKay, Nakamura, and Steinsson (2017)","text":"Modules = [HANK_MNS]","category":"page"},{"location":"#HANK_MNS.steady_state","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.steady_state","text":"A structure that saves the steady state of the model.\n\n\n\n\n\n","category":"type"},{"location":"#HANK_MNS.transition_full","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.transition_full","text":"A structure that stores the full model transition\n\n\n\n\n\n","category":"type"},{"location":"#HANK_MNS.EGM-Tuple{Matrix{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.EGM","text":"EGM(β::Float64,...)\n\nConducts one iteration on consumption and labor supply using the endogenous grid method (EGM). Inputs need to be 2x1 arrays of wage, interest etc in current and previous period\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.EGM_SS-Tuple{Matrix{Float64}, Float64, Float64, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.EGM_SS","text":"EGM_SS(β::Float64,Y::Float64,p::params)\n\nComputes household steady state (SS) savings and labor supply using the endogenous grid method (EGM).\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.aggregate_C_L-Tuple{Vector{Float64}, Matrix{Float64}, Float64, Float64, Float64, Float64, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.aggregate_C_L","text":"aggregateCL(D::Array{Float64,1},c_policies::Array{Float64,1},R::Float64,w::Float64,τ::Float64,div::Float64)\n\nComputes aggregate consumption and labor supply of the household sector. Equivalent to expect_C in the MNS code.\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.check_steady_state-Tuple{Float64, Float64, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.check_steady_state","text":"check_steady_state(β::Float64,Y::Float64,p::params)\n\nFor given β,Y and Parameters, this function computes consumption and labor suppy  as implied by the household decisions and returns the distance between output  implied by labor and output implied by consumption as well as the distance between household asset choices and the asset target. It can be used in an Root-Finding algorithm to find the β corresponding to the asset and interest rate target.\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.egm_solve_constrained-Tuple{Vector{Float64}, Int64, Float64, Float64, Float64, Float64, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.egm_solve_constrained","text":"egm_solve_constrained()\n\nBacks out consumption level of constrained household.\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.find_closest_lower","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.find_closest_lower","text":"findclosestlower(x::Float64,grid::Array{Float64,1})\n\nHelper function for lineartrans\n\n\n\n\n\n","category":"function"},{"location":"#HANK_MNS.forward_dist-Tuple{Vector{Float64}, SparseArrays.SparseMatrixCSC}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.forward_dist","text":"forward_dist\n\nCalculates Asset distribution in next period given transition matrix Pi and current distribution D\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.get_cnbp-Tuple{Array{Float64, N} where N, Matrix{Float64}, Float64, Float64, Float64, Float64, Int64, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.get_cnbp","text":"get_cnbp(xthis::Array{Float64},c::Array{Float64},R::Float64,\n        w::Float64,τ::Float64,p::params,inc_idx::Int)\n\nHelper function to retrieve some values\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.get_transition_full-Tuple{Int64, Int64, params, steady_state}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.get_transition_full","text":"get_transition_full()\n\nSolves for a steady state and a transition path. Inputs: TR (time until single-quarter interest rate change), T (time horizon transition path), RChange (Change of R at time TR)\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.inv_dist-Tuple{SparseArrays.SparseMatrixCSC}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.inv_dist","text":"inv_dist\n\nFind invariant distribution by iterating over transition matrix uses insights from https://discourse.julialang.org/t/stationary-distribution-with-sparse-transition-matrix/40301\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.lineartrans-Tuple{Vector{Float64}, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.lineartrans","text":"lineartrans(bp::Array{Float64,1},par::params)\n\nCalculates the new positions and transition probabilities on the asset grid for given savings choices. Used the to conduct a non-stochastic simulation a la Young (2010, JEDC).\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.makeknotd-Tuple{Float64, Float64, Int64, Float64}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.makeknotd","text":"makeknotd(kmin::Float64,kmax::Float64, n::Int, logshift::Float64)\n\nA Function involved in generating the household asset grid. Several methods available.\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.margU","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.margU","text":"margU(c::Float64,par::params)\n\nHelper function, computes marginal utility of consumption or second derivative of utility function (if order = 2)\n\n\n\n\n\n","category":"function"},{"location":"#HANK_MNS.reshape_c-Tuple{Vector{Float64}, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.reshape_c","text":"reshape_c(c::Array{Float64},p)\n\nhelper function with two methods to replace par2wide and par2long from the MNS code\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.set_parameters-Tuple{}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.set_parameters","text":"set_parameters()\n\nFunction to construct the parameter structure.\n\n\n\n\n\n","category":"method"},{"location":"#HANK_MNS.simulate_step-Tuple{Vector{Float64}, Matrix{Float64}, Float64, Float64, Float64, Float64, params}","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"HANK_MNS.simulate_step","text":"simulate_step()\n\nConducts forward simulation for one period. Helper function to simulateforward, equivalent to simulatestep() in MNS code. Originally used in loop in Simulateforward, replaced it to do pre-allocation there.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Replication of McKay, Nakamura, and Steinsson (2017)","title":"Replication of McKay, Nakamura, and Steinsson (2017)","text":"end","category":"page"}]
}
